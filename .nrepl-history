(sorted-map)
(doc contains?)
(def thurk (sorted-map))
(assoc thurk :a 6}
(assoc thurk :a 6)
(assoc (assoc thurk :a 6) :c 2)
(assc (assoc (assoc thurk :a 6) :c 2) :b 8)
(assoc (assoc (assoc thurk :a 6) :c 2) :b 8)
(some? #{1})
(some? #{})
(empty? #{})
tree
(def dirs ['thurk' 'asshole' 'christian'])
dirs
(def dirs ["thurk" "asshole" "christian"])
dircs
dirs
(contains dirs "christian")
(contains? dirs "christian")
(contains? (set dirs) "christian")
(cset dirs) "christian")
((set dirs) "christian")
(doc zipmap)
(get nil :dirs)
(conj nil "thurk")
